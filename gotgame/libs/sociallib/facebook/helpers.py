import facebook

import dateutil.parser as parser


class FacebookHelper(object):
    """
    Helper for facebook API.
    
    Given app_id, secret_id and token, it encapsulates the facebook graph.
    """
    def __init__(self, app_id, secret_id, token):
        self.app_id = app_id
        self.secret_id = secret_id
        
        self.graph = facebook.GraphAPI(token)
    
    def validate_token(self):
        """
        Validates the token.
        
        It raises (:class facebook.GraphAPIError) if the token is invalid or
        has been generated by a different Facebook App.
        """
        facebook_app = self.graph.get_object('app')  # raises exception if not valid
        
        # checking that the token was generated by the facebook_app
        if facebook_app.get('id') != self.app_id:
            raise facebook.GraphAPIError('OAuth access token not valid for this Facebook App.')
    
    def get_me(self):
        """
        Returns the JSON of the object associated with the token.
        """
        return self.graph.get_object('me')
    
    def is_fan(self, fb_obj_id):
        """
        Alias for `fan_since`.
        """
        return self.fan_since(fb_obj_id)
    
    def fan_since(self, fb_obj_id):
        """
        Returns the datetime when the user liked the graph object `fb_obj_id` or
        None if the user didn't like the page.
        """
        data_list = self.graph.get_object('me/likes/%s' % fb_obj_id)['data']
        
        if not data_list:
            return None
        
        created_time = data_list[0]['created_time']
        return parser.parse(created_time)
    
    def get_friends_list(self):
        """
        Returns the friends list of the user associated with the token in
        JSON format.
        """
        return self.graph.get_object('me/friends')
    
    @classmethod
    def get_public_graph_node(cls, obj_name, token=None):
        """
        Returns the public Facebook Grapth for the object with name obj_name.
        e.g.
            https://www.facebook.com/cocacola
            
            obj_name: cocacola
            
            grapth data:
            https://graph.facebook.com/cocacola
        """
        graph = facebook.GraphAPI(token)
        return graph.get_object(obj_name)
    
    @classmethod
    def get_public_profile_picture(cls, obj_id):
        """
        Returns the public Facebook profile picture for the object with id obj_id.
        e.g.
            https://www.facebook.com/cocacola
            
            obj_id: cocacola
            
            grapth data:
            http://graph.facebook.com/cocacola/?fields=picture&type=large
        """
        graph = facebook.GraphAPI()
        data = graph.get_object('%s/?fields=picture&type=large' % obj_id)
        return data['picture']['data']['url']
